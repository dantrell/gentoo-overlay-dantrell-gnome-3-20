From 9cb8e0a1b463fe5b70007033c2a1df96c3db07dc Mon Sep 17 00:00:00 2001
From: Tomas Popela <tpopela@redhat.com>
Date: Fri, 23 Sep 2016 10:06:17 +0200
Subject: [PATCH 421/595] Fix the indentation

Replace tabulators with spaces when needed.
---
 modules/webkit-editor/e-webkit-editor.c            |  24 ++--
 .../web-extension/e-composer-dom-functions.c       |  14 +-
 .../web-extension/e-dialogs-dom-functions.c        |  68 ++++-----
 .../web-extension/e-editor-dom-functions.c         | 158 ++++++++++-----------
 .../webkit-editor/web-extension/e-editor-page.c    |  66 ++++-----
 .../web-extension/e-editor-undo-redo-manager.c     |  14 +-
 .../web-extension/e-editor-web-extension.c         |  14 +-
 7 files changed, 179 insertions(+), 179 deletions(-)

diff --git a/modules/webkit-editor/e-webkit-editor.c b/modules/webkit-editor/e-webkit-editor.c
index b2d48a4cc3..bdf27332b4 100644
--- a/modules/webkit-editor/e-webkit-editor.c
+++ b/modules/webkit-editor/e-webkit-editor.c
@@ -260,7 +260,7 @@ webkit_editor_set_changed (EWebKitEditor *wk_editor,
 
 static void
 webkit_editor_set_can_undo (EWebKitEditor *wk_editor,
-			    gboolean can_undo)
+                            gboolean can_undo)
 {
 	g_return_if_fail (E_IS_WEBKIT_EDITOR (wk_editor));
 
@@ -274,7 +274,7 @@ webkit_editor_set_can_undo (EWebKitEditor *wk_editor,
 
 static void
 webkit_editor_set_can_redo (EWebKitEditor *wk_editor,
-			    gboolean can_redo)
+                            gboolean can_redo)
 {
 	g_return_if_fail (E_IS_WEBKIT_EDITOR (wk_editor));
 
@@ -407,12 +407,12 @@ web_extension_selection_changed_cb (GDBusConnection *connection,
 
 static void
 web_extension_undo_redo_state_changed_cb (GDBusConnection *connection,
-					  const gchar *sender_name,
-					  const gchar *object_path,
-					  const gchar *interface_name,
-					  const gchar *signal_name,
-					  GVariant *parameters,
-					  EWebKitEditor *wk_editor)
+                                          const gchar *sender_name,
+                                          const gchar *object_path,
+                                          const gchar *interface_name,
+                                          const gchar *signal_name,
+                                          GVariant *parameters,
+                                          EWebKitEditor *wk_editor)
 {
 	guint64 page_id = 0;
 	gboolean can_undo = FALSE, can_redo = FALSE;
@@ -812,8 +812,8 @@ webkit_editor_show_inspector (EWebKitEditor *wk_editor)
 
 static void
 webkit_editor_initialize (EContentEditor *content_editor,
-			  EContentEditorInitializedCallback callback,
-			  gpointer user_data)
+                          EContentEditorInitializedCallback callback,
+                          gpointer user_data)
 {
 	EWebKitEditor *wk_editor;
 
@@ -1886,7 +1886,7 @@ static gchar *
 webkit_editor_get_content (EContentEditor *editor,
                            EContentEditorGetContentFlags flags,
                            const gchar *inline_images_from_domain,
-			   GSList **inline_images_parts)
+                           GSList **inline_images_parts)
 {
 	EWebKitEditor *wk_editor;
 	GVariant *result;
@@ -2209,7 +2209,7 @@ webkit_editor_set_spell_checking_languages (EContentEditor *editor,
 
 static void
 webkit_editor_set_spell_check_enabled (EWebKitEditor *wk_editor,
-				       gboolean enable)
+                                       gboolean enable)
 {
 	g_return_if_fail (E_IS_WEBKIT_EDITOR (wk_editor));
 
diff --git a/modules/webkit-editor/web-extension/e-composer-dom-functions.c b/modules/webkit-editor/web-extension/e-composer-dom-functions.c
index e5708871cb..6575fa228b 100644
--- a/modules/webkit-editor/web-extension/e-composer-dom-functions.c
+++ b/modules/webkit-editor/web-extension/e-composer-dom-functions.c
@@ -258,12 +258,12 @@ move_caret_after_signature_inserted (EEditorPage *editor_page)
 
 gchar *
 e_composer_dom_insert_signature (EEditorPage *editor_page,
-				 const gchar *content,
-				 gboolean is_html,
-				 const gchar *id,
-				 gboolean *set_signature_from_message,
-				 gboolean *check_if_signature_is_changed,
-				 gboolean *ignore_next_signature_change)
+                                 const gchar *content,
+                                 gboolean is_html,
+                                 const gchar *id,
+                                 gboolean *set_signature_from_message,
+                                 gboolean *check_if_signature_is_changed,
+                                 gboolean *ignore_next_signature_change)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *signature_to_insert;
@@ -594,7 +594,7 @@ e_composer_dom_get_raw_body_content (EEditorPage *editor_page)
 
 static void
 insert_nbsp_history_event (WebKitDOMDocument *document,
-			   EEditorUndoRedoManager *manager,
+                           EEditorUndoRedoManager *manager,
                            gboolean delete,
                            guint x,
                            guint y)
diff --git a/modules/webkit-editor/web-extension/e-dialogs-dom-functions.c b/modules/webkit-editor/web-extension/e-dialogs-dom-functions.c
index c753963940..501efd96e9 100644
--- a/modules/webkit-editor/web-extension/e-dialogs-dom-functions.c
+++ b/modules/webkit-editor/web-extension/e-dialogs-dom-functions.c
@@ -88,10 +88,10 @@ for_each_cell_do (WebKitDOMElement *row,
 
 static void
 cell_dialog_set_attribute (WebKitDOMDocument *document,
-			   EContentEditorScope scope,
-			   gpointer func,
-			   GValue *value,
-			   gpointer user_data)
+                           EContentEditorScope scope,
+                           gpointer func,
+                           GValue *value,
+                           gpointer user_data)
 {
 	WebKitDOMElement *cell = get_current_cell_element (document);
 
@@ -176,7 +176,7 @@ cell_dialog_set_attribute (WebKitDOMDocument *document,
 static void
 cell_set_header_style (WebKitDOMHTMLTableCellElement *cell,
                        gboolean header_style,
-		       gpointer user_data)
+                       gpointer user_data)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNodeList *nodes = NULL;
@@ -230,7 +230,7 @@ cell_set_header_style (WebKitDOMHTMLTableCellElement *cell,
 
 void
 e_dialogs_dom_cell_mark_current_cell_element (EEditorPage *editor_page,
-					      const gchar *id)
+                                              const gchar *id)
 {
 	EEditorUndoRedoManager *manager;
 	WebKitDOMElement *cell;
@@ -322,8 +322,8 @@ e_dialogs_dom_cell_save_history_on_exit (EEditorPage *editor_page)
 
 void
 e_dialogs_dom_cell_set_element_v_align (EEditorPage *editor_page,
-					const gchar *v_align,
-					EContentEditorScope scope)
+                                        const gchar *v_align,
+                                        EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -340,8 +340,8 @@ e_dialogs_dom_cell_set_element_v_align (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_align (EEditorPage *editor_page,
-				      const gchar *align,
-				      EContentEditorScope scope)
+                                      const gchar *align,
+                                      EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -358,8 +358,8 @@ e_dialogs_dom_cell_set_element_align (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_no_wrap (EEditorPage *editor_page,
-					gboolean wrap_text,
-					EContentEditorScope scope)
+                                        gboolean wrap_text,
+                                        EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -374,8 +374,8 @@ e_dialogs_dom_cell_set_element_no_wrap (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_header_style (EEditorPage *editor_page,
-					     gboolean header_style,
-					     EContentEditorScope scope)
+                                             gboolean header_style,
+                                             EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -390,8 +390,8 @@ e_dialogs_dom_cell_set_element_header_style (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_width (EEditorPage *editor_page,
-				      const gchar *width,
-				      EContentEditorScope scope)
+                                      const gchar *width,
+                                      EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -408,8 +408,8 @@ e_dialogs_dom_cell_set_element_width (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_col_span (EEditorPage *editor_page,
-					 glong span,
-					 EContentEditorScope scope)
+                                         glong span,
+                                         EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -424,8 +424,8 @@ e_dialogs_dom_cell_set_element_col_span (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_row_span (EEditorPage *editor_page,
-					 glong span,
-					 EContentEditorScope scope)
+                                         glong span,
+                                         EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -440,8 +440,8 @@ e_dialogs_dom_cell_set_element_row_span (EEditorPage *editor_page,
 
 void
 e_dialogs_dom_cell_set_element_bg_color (EEditorPage *editor_page,
-					 const gchar *color,
-					 EContentEditorScope scope)
+                                         const gchar *color,
+                                         EContentEditorScope scope)
 {
 	GValue val = { 0 };
 
@@ -619,7 +619,7 @@ e_dialogs_dom_image_save_history_on_exit (EEditorPage *editor_page)
 
 void
 e_dialogs_dom_image_set_element_url (EEditorPage *editor_page,
-				     const gchar *url)
+                                     const gchar *url)
 {
 	WebKitDOMElement *image, *link;
 
@@ -689,8 +689,8 @@ e_dialogs_dom_image_get_element_url (EEditorPage *editor_page)
 
 void
 e_dialogs_dom_link_commit (EEditorPage *editor_page,
-			   const gchar *url,
-			   const gchar *inner_text)
+                           const gchar *url,
+                           const gchar *inner_text)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *link;
@@ -1084,9 +1084,9 @@ select_previous_word (WebKitDOMDOMSelection *dom_selection)
 
 static gchar *
 e_dialogs_dom_spell_check_run (EEditorPage *editor_page,
-			       gboolean run_next,
-			       const gchar *from_word,
-			       const gchar * const *languages)
+                               gboolean run_next,
+                               const gchar *from_word,
+                               const gchar * const *languages)
 {
 	gulong start_offset = 0, end_offset = 0;
 	WebKitDOMDocument *document;
@@ -1148,8 +1148,8 @@ e_dialogs_dom_spell_check_run (EEditorPage *editor_page,
 
 gchar *
 e_dialogs_dom_spell_check_next (EEditorPage *editor_page,
-				const gchar *from_word,
-				const gchar * const *languages)
+                                const gchar *from_word,
+                                const gchar * const *languages)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), NULL);
 
@@ -1158,8 +1158,8 @@ e_dialogs_dom_spell_check_next (EEditorPage *editor_page,
 
 gchar *
 e_dialogs_dom_spell_check_prev (EEditorPage *editor_page,
-				const gchar *from_word,
-				const gchar * const *languages)
+                                const gchar *from_word,
+                                const gchar * const *languages)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), NULL);
 
@@ -1176,7 +1176,7 @@ get_current_table_element (WebKitDOMDocument *document)
 
 void
 e_dialogs_dom_table_set_row_count (EEditorPage *editor_page,
-				   gulong expected_count)
+                                   gulong expected_count)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMHTMLCollection *rows = NULL, *cells = NULL;
@@ -1252,7 +1252,7 @@ e_dialogs_dom_table_get_row_count (EEditorPage *editor_page)
 
 void
 e_dialogs_dom_table_set_column_count (EEditorPage *editor_page,
-				      gulong expected_columns)
+                                      gulong expected_columns)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMHTMLTableElement *table_element;
diff --git a/modules/webkit-editor/web-extension/e-editor-dom-functions.c b/modules/webkit-editor/web-extension/e-editor-dom-functions.c
index f81f1d65d6..e6a6cb00de 100644
--- a/modules/webkit-editor/web-extension/e-editor-dom-functions.c
+++ b/modules/webkit-editor/web-extension/e-editor-dom-functions.c
@@ -958,7 +958,7 @@ e_editor_dom_node_is_citation_node (WebKitDOMNode *node)
 
 gint
 e_editor_dom_get_citation_level (WebKitDOMNode *node,
-				 gboolean set_plaintext_quoted)
+                                 gboolean set_plaintext_quoted)
 {
 	WebKitDOMNode *parent = node;
 	gint level = 0;
@@ -992,8 +992,8 @@ get_quotation_for_level (gint quote_level)
 
 void
 e_editor_dom_quote_plain_text_element_after_wrapping (EEditorPage *editor_page,
-						      WebKitDOMElement *element,
-						      gint quote_level)
+                                                      WebKitDOMElement *element,
+                                                      gint quote_level)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNodeList *list = NULL;
@@ -1115,7 +1115,7 @@ e_editor_dom_node_is_paragraph (WebKitDOMNode *node)
 
 WebKitDOMElement *
 e_editor_dom_wrap_and_quote_element (EEditorPage *editor_page,
-				     WebKitDOMElement *element)
+                                     WebKitDOMElement *element)
 {
 	gint citation_level;
 	WebKitDOMElement *tmp_element = element;
@@ -1150,7 +1150,7 @@ e_editor_dom_wrap_and_quote_element (EEditorPage *editor_page,
 
 WebKitDOMElement *
 e_editor_dom_insert_new_line_into_citation (EEditorPage *editor_page,
-					    const gchar *html_to_insert)
+                                            const gchar *html_to_insert)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element, *paragraph = NULL;
@@ -1446,7 +1446,7 @@ remove_thunderbird_signature (WebKitDOMDocument *document)
 
 void
 e_editor_dom_check_magic_links (EEditorPage *editor_page,
-				gboolean include_space_by_user)
+                                gboolean include_space_by_user)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNode *node;
@@ -1750,7 +1750,7 @@ e_editor_dom_check_magic_links (EEditorPage *editor_page,
 
 void
 e_editor_dom_embed_style_sheet (EEditorPage *editor_page,
-				const gchar *style_sheet_content)
+                                const gchar *style_sheet_content)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *sheet;
@@ -2293,7 +2293,7 @@ emoticon_query_info_async_cb (GFile *file,
 
 void
 e_editor_dom_insert_smiley (EEditorPage *editor_page,
-			    EEmoticon *emoticon)
+                            EEmoticon *emoticon)
 {
 	WebKitDOMDocument *document;
 	GFile *file;
@@ -2333,7 +2333,7 @@ e_editor_dom_insert_smiley (EEditorPage *editor_page,
 
 void
 e_editor_dom_insert_smiley_by_name (EEditorPage *editor_page,
-				    const gchar *name)
+                                    const gchar *name)
 {
 	const EEmoticon *emoticon;
 
@@ -3362,7 +3362,7 @@ remove_zero_width_spaces_on_body_input (EEditorPage *editor_page,
 
 void
 e_editor_dom_body_input_event_process (EEditorPage *editor_page,
-				       WebKitDOMEvent *event)
+                                       WebKitDOMEvent *event)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNode *node;
@@ -3713,7 +3713,7 @@ e_editor_dom_remove_node_and_parents_if_empty (WebKitDOMNode *node)
 
 void
 e_editor_dom_merge_siblings_if_necessary (EEditorPage *editor_page,
-					  WebKitDOMDocumentFragment *deleted_content)
+                                          WebKitDOMDocumentFragment *deleted_content)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element, *prev_element;
@@ -3803,7 +3803,7 @@ e_editor_dom_merge_siblings_if_necessary (EEditorPage *editor_page,
  * BackSpace or Delete. */
 void
 e_editor_dom_body_key_up_event_process_backspace_or_delete (EEditorPage *editor_page,
-							    gboolean delete)
+                                                            gboolean delete)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker, *selection_end_marker;
@@ -4694,7 +4694,7 @@ quote_plain_text_recursive (WebKitDOMDocument *document,
 
 WebKitDOMElement *
 e_editor_dom_quote_plain_text_element (EEditorPage *editor_page,
-				       WebKitDOMElement *element)
+                                       WebKitDOMElement *element)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNode *element_clone;
@@ -5413,8 +5413,8 @@ parse_html_into_blocks (EEditorPage *editor_page,
 
 void
 e_editor_dom_quote_and_insert_text_into_selection (EEditorPage *editor_page,
-						   const gchar *text,
-						   gboolean is_html)
+                                                   const gchar *text,
+                                                   gboolean is_html)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *blockquote, *element, *selection_start;
@@ -5711,7 +5711,7 @@ body_compositionend_event_cb (WebKitDOMElement *element,
 
 static void
 register_html_events_handlers (EEditorPage *editor_page,
-			       WebKitDOMHTMLElement *body)
+                               WebKitDOMHTMLElement *body)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -5753,7 +5753,7 @@ register_html_events_handlers (EEditorPage *editor_page,
 
 void
 e_editor_dom_convert_content (EEditorPage *editor_page,
-			      const gchar *preferred_text)
+                              const gchar *preferred_text)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *paragraph, *content_wrapper, *top_signature;
@@ -6101,8 +6101,8 @@ preserve_pre_line_breaks_in_element (WebKitDOMDocument *document,
 
 void
 e_editor_dom_convert_and_insert_html_into_selection (EEditorPage *editor_page,
-						     const gchar *html,
-						     gboolean is_html)
+                                                     const gchar *html,
+                                                     gboolean is_html)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker, *selection_end_marker, *element;
@@ -7151,7 +7151,7 @@ convert_element_from_html_to_plain_text (EEditorPage *editor_page,
 
 void
 e_editor_dom_convert_element_from_html_to_plain_text (EEditorPage *editor_page,
-						      WebKitDOMElement *element)
+                                                      WebKitDOMElement *element)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -8226,7 +8226,7 @@ restore_image (WebKitDOMDocument *document,
 
 void
 e_editor_dom_restore_images (EEditorPage *editor_page,
-			     GVariant *inline_images_to_restore)
+                             GVariant *inline_images_to_restore)
 {
 	WebKitDOMDocument *document;
 	const gchar *element_src, *name, *id;
@@ -8607,7 +8607,7 @@ e_editor_dom_process_content_after_load (EEditorPage *editor_page)
 
 GVariant *
 e_editor_dom_get_inline_images_data (EEditorPage *editor_page,
-				     const gchar *uid_domain)
+                                     const gchar *uid_domain)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMNodeList *list = NULL;
@@ -8748,7 +8748,7 @@ pasting_quoted_content (const gchar *content)
  */
 void
 e_editor_dom_insert_html (EEditorPage *editor_page,
-			  const gchar *html_text)
+                          const gchar *html_text)
 {
 	EEditorHistoryEvent *ev = NULL;
 	EEditorUndoRedoManager *manager;
@@ -9361,9 +9361,9 @@ save_history_for_delete_or_backspace (EEditorPage *editor_page,
 
 gboolean
 e_editor_dom_fix_structure_after_delete_before_quoted_content (EEditorPage *editor_page,
-							       glong key_code,
-							       gboolean control_key,
-							       gboolean delete_key)
+                                                               glong key_code,
+                                                               gboolean control_key,
+                                                               gboolean delete_key)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker, *selection_end_marker;
@@ -9711,8 +9711,8 @@ delete_last_character_from_previous_line_in_quoted_block (EEditorPage *editor_pa
 
 gboolean
 e_editor_dom_delete_last_character_on_line_in_quoted_block (EEditorPage *editor_page,
-							    glong key_code,
-							    gboolean control_key)
+                                                            glong key_code,
+                                                            gboolean control_key)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element;
@@ -10410,9 +10410,9 @@ e_editor_dom_key_press_event_process_backspace_key (EEditorPage *editor_page)
 
 gboolean
 e_editor_dom_key_press_event_process_delete_or_backspace_key (EEditorPage *editor_page,
-							      glong key_code,
-							      gboolean control_key,
-							      gboolean delete)
+                                                              glong key_code,
+                                                              gboolean control_key,
+                                                              gboolean delete)
 {
 	WebKitDOMDocument *document;
 	gboolean html_mode;
@@ -10919,7 +10919,7 @@ dom_set_link_color_in_document (EEditorPage *editor_page,
 
 void
 e_editor_dom_set_link_color (EEditorPage *editor_page,
-			     const gchar *color)
+                             const gchar *color)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -10928,7 +10928,7 @@ e_editor_dom_set_link_color (EEditorPage *editor_page,
 
 void
 e_editor_dom_set_visited_link_color (EEditorPage *editor_page,
-				     const gchar *color)
+                                     const gchar *color)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -10966,10 +10966,10 @@ e_editor_dom_fix_file_uri_images (EEditorPage *editor_page)
 
 void
 e_editor_dom_replace_base64_image_src (EEditorPage *editor_page,
-				       const gchar *selector,
-				       const gchar *base64_content,
-				       const gchar *filename,
-				       const gchar *uri)
+                                       const gchar *selector,
+                                       const gchar *base64_content,
+                                       const gchar *filename,
+                                       const gchar *uri)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element;
@@ -11027,8 +11027,8 @@ e_editor_dom_get_current_range (EEditorPage *editor_page)
 
 void
 e_editor_dom_move_caret_into_element (EEditorPage *editor_page,
-				      WebKitDOMElement *element,
-				      gboolean to_start)
+                                      WebKitDOMElement *element,
+                                      gboolean to_start)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMDOMWindow *dom_window = NULL;
@@ -11058,9 +11058,9 @@ e_editor_dom_move_caret_into_element (EEditorPage *editor_page,
 
 void
 e_editor_dom_insert_base64_image (EEditorPage *editor_page,
-				  const gchar *base64_content,
-				  const gchar *filename,
-				  const gchar *uri)
+                                  const gchar *base64_content,
+                                  const gchar *filename,
+                                  const gchar *uri)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element, *selection_start_marker, *resizable_wrapper;
@@ -11436,7 +11436,7 @@ image_load_and_insert_async (EEditorPage *editor_page,
 
 void
 e_editor_dom_insert_image (EEditorPage *editor_page,
-			   const gchar *uri)
+                           const gchar *uri)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -11465,8 +11465,8 @@ e_editor_dom_insert_image (EEditorPage *editor_page,
 
 void
 e_editor_dom_replace_image_src (EEditorPage *editor_page,
-				const gchar *selector,
-				const gchar *uri)
+                                const gchar *selector,
+                                const gchar *uri)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -11582,7 +11582,7 @@ e_editor_dom_selection_unlink (EEditorPage *editor_page)
  */
 void
 e_editor_dom_create_link (EEditorPage *editor_page,
-			  const gchar *uri)
+                          const gchar *uri)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 	g_return_if_fail (uri != NULL && *uri != '\0');
@@ -11761,7 +11761,7 @@ e_editor_dom_set_paragraph_style (EEditorPage *editor_page,
 static WebKitDOMElement *
 create_list_element (EEditorPage *editor_page,
                      EContentEditorBlockFormat format,
-		     gint level,
+                     gint level,
                      gboolean html_mode)
 {
 	WebKitDOMDocument *document;
@@ -13163,9 +13163,9 @@ mark_and_remove_leading_space (WebKitDOMDocument *document,
 static WebKitDOMElement *
 wrap_lines (EEditorPage *editor_page,
             WebKitDOMNode *block,
-	    gboolean remove_all_br,
-	    gint length_to_wrap,
-	    gint word_wrap_length)
+            gboolean remove_all_br,
+            gint length_to_wrap,
+            gint word_wrap_length)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker, *selection_end_marker;
@@ -13845,8 +13845,8 @@ e_editor_dom_remove_quoting_from_element (WebKitDOMElement *element)
 
 WebKitDOMElement *
 e_editor_dom_get_paragraph_element (EEditorPage *editor_page,
-				    gint width,
-				    gint offset)
+                                    gint width,
+                                    gint offset)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element;
@@ -13862,8 +13862,8 @@ e_editor_dom_get_paragraph_element (EEditorPage *editor_page,
 
 WebKitDOMElement *
 e_editor_dom_put_node_into_paragraph (EEditorPage *editor_page,
-				      WebKitDOMNode *node,
-				      gboolean with_input)
+                                      WebKitDOMNode *node,
+                                      gboolean with_input)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMRange *range = NULL;
@@ -13904,8 +13904,8 @@ selection_get_citation_level (WebKitDOMNode *node)
 
 WebKitDOMElement *
 e_editor_dom_wrap_paragraph_length (EEditorPage *editor_page,
-				    WebKitDOMElement *paragraph,
-				    gint length)
+                                    WebKitDOMElement *paragraph,
+                                    gint length)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), NULL);
 	g_return_val_if_fail (WEBKIT_DOM_IS_ELEMENT (paragraph), NULL);
@@ -14077,7 +14077,7 @@ e_editor_dom_wrap_paragraphs_in_document (EEditorPage *editor_page)
 
 WebKitDOMElement *
 e_editor_dom_wrap_paragraph (EEditorPage *editor_page,
-			     WebKitDOMElement *paragraph)
+                             WebKitDOMElement *paragraph)
 {
 	gint indentation_level, citation_level, quote;
 	gint word_wrap_length, final_width, offset = 0;
@@ -14572,7 +14572,7 @@ exit:
  */
 void
 e_editor_dom_selection_set_underline (EEditorPage *editor_page,
-				      gboolean underline)
+                                      gboolean underline)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -14620,7 +14620,7 @@ e_editor_dom_selection_is_subscript (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_subscript (EEditorPage *editor_page,
-				      gboolean subscript)
+                                      gboolean subscript)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -14667,7 +14667,7 @@ e_editor_dom_selection_is_superscript (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_superscript (EEditorPage *editor_page,
-					gboolean superscript)
+                                        gboolean superscript)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -14719,7 +14719,7 @@ e_editor_dom_selection_is_strikethrough (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_strikethrough (EEditorPage *editor_page,
-					  gboolean strikethrough)
+                                          gboolean strikethrough)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -15156,7 +15156,7 @@ unmonospace_selection (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_monospace (EEditorPage *editor_page,
-				      gboolean value)
+                                      gboolean value)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMRange *range = NULL;
@@ -15331,7 +15331,7 @@ e_editor_dom_selection_is_bold (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_bold (EEditorPage *editor_page,
-				 gboolean bold)
+                                 gboolean bold)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -15386,7 +15386,7 @@ e_editor_dom_selection_is_italic (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_italic (EEditorPage *editor_page,
-				   gboolean italic)
+                                   gboolean italic)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -15577,7 +15577,7 @@ e_editor_dom_selection_get_font_size (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_font_size (EEditorPage *editor_page,
-				      EContentEditorFontSize font_size)
+                                      EContentEditorFontSize font_size)
 {
 	WebKitDOMDocument *document;
 	EEditorUndoRedoManager *manager;
@@ -15669,7 +15669,7 @@ e_editor_dom_selection_set_font_size (EEditorPage *editor_page,
  */
 void
 e_editor_dom_selection_set_font_name (EEditorPage *editor_page,
-				      const gchar *font_name)
+                                      const gchar *font_name)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -15716,7 +15716,7 @@ e_editor_dom_selection_get_font_name (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_font_color (EEditorPage *editor_page,
-				       const gchar *color)
+                                       const gchar *color)
 {
 	EEditorUndoRedoManager *manager;
 	EEditorHistoryEvent *ev = NULL;
@@ -16627,7 +16627,7 @@ format_change_list_to_list (EEditorPage *editor_page,
  */
 void
 e_editor_dom_selection_set_block_format (EEditorPage *editor_page,
-					 EContentEditorBlockFormat format)
+                                         EContentEditorBlockFormat format)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMRange *range = NULL;
@@ -16809,7 +16809,7 @@ e_editor_dom_selection_get_background_color (EEditorPage *editor_page)
  */
 void
 e_editor_dom_selection_set_background_color (EEditorPage *editor_page,
-					     const gchar *color)
+                                             const gchar *color)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -16910,7 +16910,7 @@ set_block_alignment (WebKitDOMElement *element,
  */
 void
 e_editor_dom_selection_set_alignment (EEditorPage *editor_page,
-				      EContentEditorAlignment alignment)
+                                      EContentEditorAlignment alignment)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker, *selection_end_marker;
@@ -17029,7 +17029,7 @@ e_editor_dom_selection_set_alignment (EEditorPage *editor_page,
  */
 void
 e_editor_dom_selection_replace (EEditorPage *editor_page,
-				const gchar *replacement)
+                                const gchar *replacement)
 {
 	EEditorHistoryEvent *ev = NULL;
 	EEditorUndoRedoManager *manager;
@@ -17084,7 +17084,7 @@ e_editor_dom_selection_replace (EEditorPage *editor_page,
  */
 void
 e_editor_dom_replace_caret_word (EEditorPage *editor_page,
-				 const gchar *replacement)
+                                 const gchar *replacement)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMDOMWindow *dom_window = NULL;
@@ -17190,7 +17190,7 @@ e_editor_dom_get_list_alignment_from_node (WebKitDOMNode *node)
 
 WebKitDOMElement *
 e_editor_dom_prepare_paragraph (EEditorPage *editor_page,
-				gboolean with_selection)
+                                gboolean with_selection)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element, *paragraph;
@@ -17214,8 +17214,8 @@ e_editor_dom_prepare_paragraph (EEditorPage *editor_page,
 
 void
 e_editor_dom_selection_set_on_point (EEditorPage *editor_page,
-				     guint x,
-				     guint y)
+                                     guint x,
+                                     guint y)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMRange *range = NULL;
@@ -17239,10 +17239,10 @@ e_editor_dom_selection_set_on_point (EEditorPage *editor_page,
 
 void
 e_editor_dom_selection_get_coordinates (EEditorPage *editor_page,
-					guint *start_x,
-					guint *start_y,
-					guint *end_x,
-					guint *end_y)
+                                        guint *start_x,
+                                        guint *start_y,
+                                        guint *end_x,
+                                        guint *end_y)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *element, *parent;
diff --git a/modules/webkit-editor/web-extension/e-editor-page.c b/modules/webkit-editor/web-extension/e-editor-page.c
index c69504cd0b..0ed0cffd40 100644
--- a/modules/webkit-editor/web-extension/e-editor-page.c
+++ b/modules/webkit-editor/web-extension/e-editor-page.c
@@ -76,7 +76,7 @@ G_DEFINE_TYPE (EEditorPage, e_editor_page, G_TYPE_OBJECT)
 
 static void
 web_page_document_loaded_cb (WebKitWebPage *web_page,
-			     EEditorPage *editor_page)
+                             EEditorPage *editor_page)
 {
 	g_return_if_fail (WEBKIT_IS_WEB_PAGE (web_page));
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
@@ -89,9 +89,9 @@ web_page_document_loaded_cb (WebKitWebPage *web_page,
 
 static gboolean
 web_page_context_menu_cb (WebKitWebPage *web_page,
-			  WebKitContextMenu *context_menu,
-			  WebKitWebHitTestResult *hit_test_result,
-			  EEditorPage *editor_page)
+                          WebKitContextMenu *context_menu,
+                          WebKitWebHitTestResult *hit_test_result,
+                          EEditorPage *editor_page)
 {
 	WebKitDOMNode *node;
 	EContentEditorNodeFlags flags = 0;
@@ -134,8 +134,8 @@ web_page_context_menu_cb (WebKitWebPage *web_page,
 
 static void
 e_editor_page_setup (EEditorPage *editor_page,
-		     WebKitWebPage *web_page,
-		     struct _EEditorWebExtension *web_extension)
+                     WebKitWebPage *web_page,
+                     struct _EEditorWebExtension *web_extension)
 {
 	WebKitWebEditor *web_editor;
 
@@ -263,7 +263,7 @@ e_editor_page_init (EEditorPage *editor_page)
 
 EEditorPage *
 e_editor_page_new (WebKitWebPage *web_page,
-		   struct _EEditorWebExtension *web_extension)
+                   struct _EEditorWebExtension *web_extension)
 {
 	EEditorPage *editor_page;
 
@@ -355,7 +355,7 @@ e_editor_page_get_html_mode (EEditorPage *editor_page)
 
 void
 e_editor_page_set_html_mode (EEditorPage *editor_page,
-			     gboolean value)
+                             gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -372,7 +372,7 @@ e_editor_page_get_force_image_load (EEditorPage *editor_page)
 
 void
 e_editor_page_set_force_image_load (EEditorPage *editor_page,
-				    gboolean value)
+                                    gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -389,7 +389,7 @@ e_editor_page_get_word_wrap_length (EEditorPage *editor_page)
 
 static gboolean
 e_editor_page_check_style_flag (EEditorPage *editor_page,
-				EContentEditorStyleFlags flag)
+                                EContentEditorStyleFlags flag)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), FALSE);
 
@@ -398,8 +398,8 @@ e_editor_page_check_style_flag (EEditorPage *editor_page,
 
 static gboolean
 e_editor_page_set_style_flag (EEditorPage *editor_page,
-			      EContentEditorStyleFlags flag,
-			      gboolean value)
+                              EContentEditorStyleFlags flag,
+                              gboolean value)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), FALSE);
 
@@ -421,7 +421,7 @@ e_editor_page_get_bold (EEditorPage *editor_page)
 
 void
 e_editor_page_set_bold (EEditorPage *editor_page,
-			gboolean value)
+                        gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -441,7 +441,7 @@ e_editor_page_get_italic (EEditorPage *editor_page)
 
 void
 e_editor_page_set_italic (EEditorPage *editor_page,
-			  gboolean value)
+                          gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -461,7 +461,7 @@ e_editor_page_get_underline (EEditorPage *editor_page)
 
 void
 e_editor_page_set_underline (EEditorPage *editor_page,
-			     gboolean value)
+                             gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -481,7 +481,7 @@ e_editor_page_get_monospace (EEditorPage *editor_page)
 
 void
 e_editor_page_set_monospace (EEditorPage *editor_page,
-			     gboolean value)
+                             gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -501,7 +501,7 @@ e_editor_page_get_strikethrough (EEditorPage *editor_page)
 
 void
 e_editor_page_set_strikethrough (EEditorPage *editor_page,
-				 gboolean value)
+                                 gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -521,7 +521,7 @@ e_editor_page_get_font_size (EEditorPage *editor_page)
 
 void
 e_editor_page_set_font_size (EEditorPage *editor_page,
-			     guint value)
+                             guint value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -549,7 +549,7 @@ e_editor_page_get_alignment (EEditorPage *editor_page)
 
 void
 e_editor_page_set_alignment (EEditorPage *editor_page,
-			     EContentEditorAlignment value)
+                             EContentEditorAlignment value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -566,7 +566,7 @@ e_editor_page_get_return_key_pressed (EEditorPage *editor_page)
 
 void
 e_editor_page_set_return_key_pressed (EEditorPage *editor_page,
-				      gboolean value)
+                                      gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -583,7 +583,7 @@ e_editor_page_get_space_key_pressed (EEditorPage *editor_page)
 
 void
 e_editor_page_set_space_key_pressed (EEditorPage *editor_page,
-				     gboolean value)
+                                     gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -632,8 +632,8 @@ e_editor_page_get_inline_spelling_enabled (EEditorPage *editor_page)
 
 gboolean
 e_editor_page_check_word_spelling (EEditorPage *editor_page,
-				   const gchar *word,
-				   const gchar * const *languages)
+                                   const gchar *word,
+                                   const gchar * const *languages)
 {
 	g_return_val_if_fail (E_IS_EDITOR_PAGE (editor_page), TRUE);
 
@@ -655,7 +655,7 @@ e_editor_page_get_body_input_event_removed (EEditorPage *editor_page)
 
 void
 e_editor_page_set_body_input_event_removed (EEditorPage *editor_page,
-					    gboolean value)
+                                            gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -672,7 +672,7 @@ e_editor_page_get_convert_in_situ (EEditorPage *editor_page)
 
 void
 e_editor_page_set_convert_in_situ (EEditorPage *editor_page,
-				   gboolean value)
+                                   gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -689,8 +689,8 @@ e_editor_page_get_inline_images (EEditorPage *editor_page)
 
 void
 e_editor_page_add_new_inline_image_into_list (EEditorPage *editor_page,
-					      const gchar *cid_src,
-					      const gchar *src)
+                                              const gchar *cid_src,
+                                              const gchar *src)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -707,7 +707,7 @@ e_editor_page_get_is_smiley_written (EEditorPage *editor_page)
 
 void
 e_editor_page_set_is_smiley_written (EEditorPage *editor_page,
-				     gboolean value)
+                                     gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -724,7 +724,7 @@ e_editor_page_get_dont_save_history_in_body_input (EEditorPage *editor_page)
 
 void
 e_editor_page_set_dont_save_history_in_body_input (EEditorPage *editor_page,
-						   gboolean value)
+                                                   gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -741,7 +741,7 @@ e_editor_page_is_pasting_content_from_itself (EEditorPage *editor_page)
 
 void
 e_editor_page_set_pasting_content_from_itself (EEditorPage *editor_page,
-					       gboolean value)
+                                               gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -758,7 +758,7 @@ e_editor_page_get_renew_history_after_coordinates (EEditorPage *editor_page)
 
 void
 e_editor_page_set_renew_history_after_coordinates (EEditorPage *editor_page,
-						   gboolean renew_history_after_coordinates)
+                                                   gboolean renew_history_after_coordinates)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -775,7 +775,7 @@ e_editor_page_is_composition_in_progress (EEditorPage *editor_page)
 
 void
 e_editor_page_set_composition_in_progress (EEditorPage *editor_page,
-					   gboolean value)
+                                           gboolean value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -792,7 +792,7 @@ e_editor_page_get_spell_check_on_scroll_event_source_id (EEditorPage *editor_pag
 
 void
 e_editor_page_set_spell_check_on_scroll_event_source_id (EEditorPage *editor_page,
-							 guint value)
+                                                         guint value)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
diff --git a/modules/webkit-editor/web-extension/e-editor-undo-redo-manager.c b/modules/webkit-editor/web-extension/e-editor-undo-redo-manager.c
index 299bce0bd9..5082e6c94a 100644
--- a/modules/webkit-editor/web-extension/e-editor-undo-redo-manager.c
+++ b/modules/webkit-editor/web-extension/e-editor-undo-redo-manager.c
@@ -1850,7 +1850,7 @@ undo_redo_remove_link (EEditorPage *editor_page,
 
 static void
 undo_return_in_empty_list_item (EEditorPage *editor_page,
-				EEditorHistoryEvent *event)
+                                EEditorHistoryEvent *event)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMElement *selection_start_marker;
@@ -2156,7 +2156,7 @@ undo_redo_citation_split (EEditorPage *editor_page,
 
 static void
 undo_redo_unquote (EEditorPage *editor_page,
-		   EEditorHistoryEvent *event,
+                   EEditorHistoryEvent *event,
                    gboolean undo)
 {
 	WebKitDOMDocument *document;
@@ -2315,7 +2315,7 @@ remove_forward_redo_history_events_if_needed (EEditorUndoRedoManager *manager)
 
 void
 e_editor_undo_redo_manager_insert_history_event (EEditorUndoRedoManager *manager,
-						 EEditorHistoryEvent *event)
+                                                 EEditorHistoryEvent *event)
 {
 	g_return_if_fail (E_IS_EDITOR_UNDO_REDO_MANAGER (manager));
 
@@ -2767,7 +2767,7 @@ e_editor_undo_redo_manager_clean_history (EEditorUndoRedoManager *manager)
 
 static void
 editor_undo_redo_manager_set_editor_page (EEditorUndoRedoManager *manager,
-					  EEditorPage *editor_page)
+                                          EEditorPage *editor_page)
 {
 	g_return_if_fail (E_IS_EDITOR_PAGE (editor_page));
 
@@ -2794,9 +2794,9 @@ editor_undo_redo_manager_dispose (GObject *object)
 
 static void
 editor_undo_redo_manager_get_property (GObject *object,
-				       guint property_id,
-				       GValue *value,
-				       GParamSpec *pspec)
+                                       guint property_id,
+                                       GValue *value,
+                                       GParamSpec *pspec)
 {
 	switch (property_id) {
 		case PROP_CAN_REDO:
diff --git a/modules/webkit-editor/web-extension/e-editor-web-extension.c b/modules/webkit-editor/web-extension/e-editor-web-extension.c
index de4289ebe4..03b519457c 100644
--- a/modules/webkit-editor/web-extension/e-editor-web-extension.c
+++ b/modules/webkit-editor/web-extension/e-editor-web-extension.c
@@ -612,7 +612,7 @@ G_DEFINE_TYPE (EEditorWebExtension, e_editor_web_extension, G_TYPE_OBJECT)
 
 static EEditorPage *
 get_editor_page (EEditorWebExtension *extension,
-		 guint64 page_id)
+                 guint64 page_id)
 {
 	g_return_val_if_fail (E_IS_EDITOR_WEB_EXTENSION (extension), NULL);
 
@@ -621,8 +621,8 @@ get_editor_page (EEditorWebExtension *extension,
 
 static EEditorPage *
 get_editor_page_or_return_dbus_error (GDBusMethodInvocation *invocation,
-				      EEditorWebExtension *extension,
-				      guint64 page_id)
+                                      EEditorWebExtension *extension,
+                                      guint64 page_id)
 {
 	WebKitWebPage *web_page;
 	EEditorPage *editor_page;
@@ -2245,7 +2245,7 @@ handle_method_call (GDBusConnection *connection,
 
 static void
 web_page_gone_cb (gpointer user_data,
-		  GObject *gone_web_page)
+                  GObject *gone_web_page)
 {
 	EEditorWebExtension *extension = user_data;
 	GHashTableIter iter;
@@ -2437,7 +2437,7 @@ web_page_send_request_cb (WebKitWebPage *web_page,
 
 static void
 web_page_document_loaded_cb (WebKitWebPage *web_page,
-			     gpointer user_data)
+                             gpointer user_data)
 {
 	WebKitDOMDocument *document;
 	WebKitDOMRange *range = NULL;
@@ -2496,7 +2496,7 @@ web_page_created_cb (WebKitWebExtension *wk_extension,
 
 void
 e_editor_web_extension_initialize (EEditorWebExtension *extension,
-				   WebKitWebExtension *wk_extension)
+                                   WebKitWebExtension *wk_extension)
 {
 	g_return_if_fail (E_IS_EDITOR_WEB_EXTENSION (extension));
 
@@ -2522,7 +2522,7 @@ e_editor_web_extension_initialize (EEditorWebExtension *extension,
 
 void
 e_editor_web_extension_dbus_register (EEditorWebExtension *extension,
-				      GDBusConnection *connection)
+                                      GDBusConnection *connection)
 {
 	GError *error = NULL;
 	static GDBusNodeInfo *introspection_data = NULL;
-- 
2.15.0

